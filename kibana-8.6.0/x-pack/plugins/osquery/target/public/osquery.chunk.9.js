/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements. 
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.osquery_bundle_jsonpfunction=window.osquery_bundle_jsonpfunction||[]).push([[9],{162:function(e,t,a){"use strict";a.r(t),a.d(t,"OsqueryActionResults",(function(){return E})),a.d(t,"default",(function(){return x}));var n=a(2),r=a(0),s=a.n(r),i=a(10),l=a(80),u=a(6),c=a(58),o=a(13),d=a(23),g=a(18),m=a(72),f=a(75),p=a(71),v=a(25);const y=s.a.memo((({actionId:e,ruleName:t,agentIds:a,startDate:r,ecsData:i})=>{const{data:l}=Object(m.a)({actionId:e});return s.a.createElement(v.a.Provider,{value:i},s.a.createElement(n.EuiSpacer,{size:"s"}),s.a.createElement(n.EuiComment,{username:t&&t[0],timestamp:s.a.createElement(g.FormattedRelative,{value:r}),event:f.e,"data-test-subj":"osquery-results-comment"},s.a.createElement(p.a,{actionId:e,data:null==l?void 0:l.queries,startDate:null==l?void 0:l["@timestamp"],expirationDate:null==l?void 0:l.expiration,agentIds:a})),s.a.createElement(n.EuiSpacer,{size:"s"}))})),q=({agentIds:e,ruleName:t,alertId:a,ecsData:r})=>{const{data:i}=Object(l.a)({filterQuery:{term:{alert_ids:a}},activePage:0,limit:100,direction:c.a.desc,sortField:"@timestamp"});return s.a.createElement("div",{"data-test-subj":"osquery-results"},null==i?void 0:i.data.items.map(((a,n)=>{var i,l,u,c,o;const d=null===(i=a.fields)||void 0===i||null===(l=i.action_id)||void 0===l?void 0:l[0],g=null===(u=a.fields)||void 0===u||null===(c=u["queries.action_id"])||void 0===c?void 0:c[0],m=null===(o=a.fields)||void 0===o?void 0:o["@timestamp"][0];return s.a.createElement(y,{key:d+n,actionId:d,queryId:g,startDate:m,ruleName:t,agentIds:e,ecsData:r})})),s.a.createElement(n.EuiSpacer,{size:"s"}))},E=s.a.memo(q),b=({services:e,...t})=>s.a.createElement(d.e,{theme$:e.theme.theme$},s.a.createElement(u.b,{services:e},s.a.createElement(n.EuiErrorBoundary,null,s.a.createElement(i.QueryClientProvider,{client:o.a},s.a.createElement(E,t))))),x=s.a.memo(b)},75:function(e,t,a){"use strict";a.d(t,"g",(function(){return r})),a.d(t,"d",(function(){return s})),a.d(t,"a",(function(){return i})),a.d(t,"b",(function(){return l})),a.d(t,"c",(function(){return u})),a.d(t,"f",(function(){return c})),a.d(t,"e",(function(){return o}));var n=a(9);const r=e=>0===e?"":1===e?n.i18n.translate("xpack.osquery.agents.oneSelectedAgentText",{defaultMessage:"{numAgents} agent selected.",values:{numAgents:e}}):n.i18n.translate("xpack.osquery.agents.mulitpleSelectedAgentsText",{defaultMessage:"{numAgents} agents selected.",values:{numAgents:e}}),s=n.i18n.translate("xpack.osquery.agents.allAgentsLabel",{defaultMessage:"All agents"}),i=n.i18n.translate("xpack.osquery.agents.platformLabel",{defaultMessage:"Platform"}),l=n.i18n.translate("xpack.osquery.agents.policyLabel",{defaultMessage:"Policy"}),u=(n.i18n.translate("xpack.osquery.agents.agent",{defaultMessage:"Agent"}),n.i18n.translate("xpack.osquery.agents.selectionLabel",{defaultMessage:"Agents"})),c=(n.i18n.translate("xpack.osquery.agents.query",{defaultMessage:"Query"}),n.i18n.translate("xpack.osquery.agents.selectAgentLabel",{defaultMessage:"Select agents or groups to query"})),o=(n.i18n.translate("xpack.osquery.agents.errorSearchDescription",{defaultMessage:"An error has occurred on all agents search"}),n.i18n.translate("xpack.osquery.agents.failSearchDescription",{defaultMessage:"Failed to fetch agents"}),n.i18n.translate("xpack.osquery.agent.attachedQuery",{defaultMessage:"attached query"}))},80:function(e,t,a){"use strict";a.d(t,"a",(function(){return u}));var n=a(10),r=a(9),s=a(66),i=a(6),l=a(56);const u=({activePage:e,direction:t,limit:a,sortField:u,filterQuery:c,skip:o=!1})=>{const{http:d}=Object(i.e)().services,g=Object(l.a)();return Object(n.useQuery)(["actions",{activePage:e,direction:t,limit:a,sortField:u}],(()=>d.get("/api/osquery/live_queries",{query:{filterQuery:Object(s.a)(c),page:e,pageSize:a,sort:u,sortOrder:t}})),{keepPreviousData:!0,enabled:!o,onSuccess:()=>g(),onError:e=>g(e,{title:r.i18n.translate("xpack.osquery.live_queries_all.fetchError",{defaultMessage:"Error while fetching live queries"})})})}}}]);