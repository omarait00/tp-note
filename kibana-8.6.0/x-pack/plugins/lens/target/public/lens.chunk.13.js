/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements. 
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.lens_bundle_jsonpfunction=window.lens_bundle_jsonpfunction||[]).push([[13],{489:function(e,t,n){"use strict";n.r(t),n.d(t,"timeScaleFn",(function(){return c}));var a=n(39),o=n.n(a),s=n(0),i=n(31),l=n(27);const u={s:1e3,m:6e4,h:36e5,d:864e5},r=(e,t,n)=>((e,t)=>{if(!e)return t();{const n=o()().zoneName();try{return o.a.tz.setDefault(e),t()}finally{o.a.tz.setDefault(n)}}})(t,(()=>Object(l.calculateBounds)(e,{forceNow:null==n?void 0:n()}))),c=(e,t,n)=>async(a,{dateColumnId:c,inputColumnId:m,outputColumnId:d,outputColumnName:f,targetUnit:g,reducedTimeRange:w},p)=>{let v;const C=await t(p);let O;if(c){const t=a.columns.find((e=>e.id===c));if(!t)throw new Error(s.i18n.translate("xpack.lens.functions.timeScale.dateColumnMissingMessage",{defaultMessage:"Specified dateColumnId {columnId} does not exist.",values:{columnId:c}}));const i=(await e(p)).getDateHistogramMeta(t,{timeZone:C}),u=(null==i?void 0:i.interval)&&Object(l.parseInterval)(i.interval);if(v=(null==i?void 0:i.timeRange)&&r(i.timeRange,null==i?void 0:i.timeZone,n),O=e=>{var t;const n=o.a.tz(e[c],null!==(t=null==i?void 0:i.timeZone)&&void 0!==t?t:C);return{startOfBucket:n,endOfBucket:n.clone().add(u)}},!i||!u)throw new Error(s.i18n.translate("xpack.lens.functions.timeScale.timeInfoMissingMessage",{defaultMessage:"Could not fetch date histogram information"}))}else{const e=p.getSearchContext().timeRange;if(v=r(e,C,n),!v.max||!v.min)throw new Error(s.i18n.translate("xpack.lens.functions.timeScale.timeBoundsMissingMessage",{defaultMessage:'Could not parse "Time Range"'}));const t=v.max;let a=v.min;if(w){const e=t.clone().subtract(Object(l.parseInterval)(w));e>a&&(a=e)}O=()=>({startOfBucket:a,endOfBucket:t})}const x=Object(i.buildResultColumns)(a,d,m,f,{allowColumnOverwrite:!0});return x?{...a,columns:x,rows:a.rows.map((e=>{const t={...e};let{startOfBucket:n,endOfBucket:a}=O(e);v&&v.min&&(n=o.a.max(n,v.min)),v&&v.max&&(a=o.a.min(a,v.max));const s=a.diff(n)/u[g],i=t[m];return null!=i&&(t[d]=Number(i)/s),t}))}:a}}}]);