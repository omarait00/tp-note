/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements. 
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.securitySolution_bundle_jsonpfunction=window.securitySolution_bundle_jsonpfunction||[]).push([[29],{1121:function(e,t,s){"use strict";s.d(t,"a",(function(){return O}));var n=s(4),i=s.n(n),o=s(32),a=s(35),l=s(77),c=s(101),r=s(39),p=s(226),d=s(33),u=s.n(d),y=s(142),g=s(6),_=s.n(g),f=s(0);const m=Object.freeze(new Map([["logging",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.logging",{defaultMessage:"Logging"})],["streaming",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.streaming",{defaultMessage:"Streaming"})],["malware",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.malware",{defaultMessage:"Malware"})],["events",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.events",{defaultMessage:"Events"})],["memory_protection",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.memory_protection",{defaultMessage:"Memory Threat"})],["behavior_protection",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.behavior_protection",{defaultMessage:"Malicious Behavior"})]])),k=Object.freeze(new Map([["configure_dns_events",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.configure_dns_events",{defaultMessage:"Configure DNS Events"})],["configure_elasticsearch_connection",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.configure_elasticsearch_connection",{defaultMessage:"Configure Elasticsearch Connection"})],["configure_file_events",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.configure_file_events",{defaultMessage:"Configure File Events"})],["configure_imageload_events",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.configure_imageload_events",{defaultMessage:"Configure Image Load Events"})],["configure_kernel",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.configure_kernel",{defaultMessage:"Configure Kernel"})],["configure_logging",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.configure_logging",{defaultMessage:"Configure Logging"})],["configure_malware",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.configure_malware",{defaultMessage:"Configure Malware"})],["configure_network_events",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.configure_network_events",{defaultMessage:"Configure Network Events"})],["configure_process_events",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.configure_process_events",{defaultMessage:"Configure Process Events"})],["configure_registry_events",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.configure_registry_events",{defaultMessage:"Configure Registry Events"})],["configure_security_events",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.configure_security_events",{defaultMessage:"Configure Security Events"})],["connect_kernel",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.connect_kernel",{defaultMessage:"Connect Kernel"})],["detect_async_image_load_events",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.detect_async_image_load_events",{defaultMessage:"Detect Async Image Load Events"})],["detect_file_open_events",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.detect_file_open_events",{defaultMessage:"Detect File Open Events"})],["detect_file_write_events",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.detect_file_write_events",{defaultMessage:"Detect File Write Events"})],["detect_network_events",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.detect_network_events",{defaultMessage:"Detect Network Events"})],["detect_process_events",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.detect_process_events",{defaultMessage:"Detect Process Events"})],["detect_registry_events",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.detect_registry_events",{defaultMessage:"Detect Registry Events"})],["detect_sync_image_load_events",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.detect_sync_image_load_events",{defaultMessage:"Detect Sync Image Load Events"})],["download_global_artifacts",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.download_global_artifacts",{defaultMessage:"Download Global Artifacts"})],["download_user_artifacts",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.download_user_artifacts",{defaultMessage:"Download User Artifacts"})],["load_config",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.load_config",{defaultMessage:"Load Config"})],["load_malware_model",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.load_malware_model",{defaultMessage:"Load Malware Model"})],["read_elasticsearch_config",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.read_elasticsearch_config",{defaultMessage:"Read Elasticsearch Config"})],["read_events_config",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.read_events_config",{defaultMessage:"Read Events Config"})],["read_kernel_config",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.read_kernel_config",{defaultMessage:"Read Kernel Config"})],["read_logging_config",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.read_logging_config",{defaultMessage:"Read Logging Config"})],["read_malware_config",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.read_malware_config",{defaultMessage:"Read Malware Config"})],["workflow",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.workflow",{defaultMessage:"Workflow"})],["full_disk_access",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.full_disk_access",{defaultMessage:"Full Disk Access"})],["macos_system_ext",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.macos_system_ext",{defaultMessage:"Permissions required"})],["linux_deadlock",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.linux_deadlock",{defaultMessage:"Disabled to avoid potential system deadlock"})]])),h=Object.freeze(new Map([[y.a.success,f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.success",{defaultMessage:"Success"})],[y.a.warning,f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.warning",{defaultMessage:"Warning"})],[y.a.failure,f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.failed",{defaultMessage:"Failed"})],[y.a.unsupported,f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.unsupported",{defaultMessage:"Unsupported"})]])),R=Object.freeze(new Map([["full_disk_access",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.description.full_disk_access",{defaultMessage:"You must enable full disk access for Elastic Endpoint on your machine."})],["macos_system_ext",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.description.macos_system_ext",{defaultMessage:"You must enable the Mac system extension for Elastic Endpoint on your machine."})],["linux_deadlock",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.description.linux_deadlock",{defaultMessage:"Malware protection was disabled to avoid a potential system deadlock. To resolve this issue, the file systems causing this need to be identified in integration policy advanced settings (linux.advanced.fanotify.ignored_filesystems). Learn more in our"})]])),v=Object.freeze(new Map([["full_disk_access",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.link.text.full_disk_access",{defaultMessage:" Learn more."})],["macos_system_ext",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.link.text.macos_system_ext",{defaultMessage:" Learn more."})],["linux_deadlock",f.i18n.translate("xpack.securitySolution.endpoint.details.policyResponse.link.text.linux_deadlock",{defaultMessage:" troubleshooting docs."})]])),x=new Set(["load_malware_model","configure_malware"]);function E(e,t){return"macos"===e&&"connect_kernel"===t.name&&t.status===y.a.failure}function S(e,t){return"linux"===e&&x.has(t.name)&&"Disabled due to potential system deadlock"===t.message}class policy_response_friendly_names_PolicyResponseActionFormatter{constructor(e,t,s=""){var n;_()(this,"key",void 0),_()(this,"title",void 0),_()(this,"description",void 0),_()(this,"hasError",void 0),_()(this,"errorTitle",void 0),_()(this,"errorDescription",void 0),_()(this,"status",void 0),_()(this,"linkText",void 0),this.policyResponseAppliedAction=e,this.docLinks=t,this.os=s,this.key=e.name,this.title=null!==(n=k.get(this.errorKey||this.key))&&void 0!==n?n:this.key.replace(/_/g," ").replace(/\b(\w)/g,(e=>e.toUpperCase())),this.hasError=e.status===y.a.failure||e.status===y.a.warning,this.description=R.get(this.key)||e.message,this.errorDescription=R.get(this.errorKey||this.key)||this.policyResponseAppliedAction.message,this.errorTitle=this.errorDescription?this.title:e.name,this.status=h.get(e.status),this.linkText=v.get(this.errorKey||this.key)}get linkUrl(){return this.docLinks[this.errorKey]}get isGeneric(){return e=this.os,t=this.policyResponseAppliedAction,!!("macos"===e&&"full_disk_access"===t.name||E(this.os,this.policyResponseAppliedAction)||S(this.os,this.policyResponseAppliedAction));var e,t}get errorKey(){return E(this.os,this.policyResponseAppliedAction)?"macos_system_ext":S(this.os,this.policyResponseAppliedAction)?"linux_deadlock":this.policyResponseAppliedAction.name}}const b=u()(o.EuiCallOut).withConfig({displayName:"StyledEuiCallout",componentId:"sc-15759fc-0"})(["padding:",";"],(({theme:e})=>e.eui.euiSizeS)),w=u()(o.EuiText).withConfig({displayName:"StyledEuiText",componentId:"sc-15759fc-1"})(["white-space:break-spaces;text-align:left;line-height:inherit;"]),M=Object(n.memo)((({policyResponseActionFormatter:e})=>e.hasError?i.a.createElement(b,{title:e.errorTitle,color:"danger",iconType:"alert","data-test-subj":"endpointPolicyResponseErrorCallOut"},i.a.createElement(w,{size:"s","data-test-subj":"endpointPolicyResponseMessage"},e.errorDescription,e.linkText&&e.linkUrl&&i.a.createElement(o.EuiLink,{target:"_blank",href:e.linkUrl,"data-test-subj":"endpointPolicyResponseErrorCallOutLink"},e.linkText))):i.a.createElement(w,{size:"xs","data-test-subj":"endpointPolicyResponseMessage"},e.description||e.title)));M.displayName="PolicyResponseActionItem";const j=u()(o.EuiTreeView).withConfig({displayName:"StyledEuiTreeView",componentId:"sc-a7dddx-0"})([".policy-response-action-item-expanded{height:auto;padding-top:",";padding-bottom:",";.euiTreeView__nodeLabel{width:100%;}}.policyResponseStatusHealth{padding-top:5px;}.euiTreeView__node--expanded{max-height:none !important;.policy-response-action-expanded + div{.euiTreeView__node{max-height:none !important;}}}.euiTreeView__node{max-height:none !important;.euiNotificationBadge{margin-right:5px;}.euiTreeView__nodeLabel{.euiText{font-size:",";}}}"],(({theme:e})=>e.eui.euiSizeS),(({theme:e})=>e.eui.euiSizeS),(({theme:e})=>e.eui.euiFontSize)),C=Object(n.memo)((({hostOs:e,policyResponseConfig:t,policyResponseActions:s,policyResponseAttentionCount:c})=>{const{docLinks:r}=Object(l.k)().services,p=Object(n.useCallback)(((e,t)=>e===y.a.success?i.a.createElement(o.EuiHealth,{color:"success","data-test-subj":"endpointPolicyResponseStatusSuccessHealth",className:"policyResponseStatusHealth"}):e===y.a.unsupported?i.a.createElement(o.EuiHealth,{color:"subdued","data-test-subj":"endpointPolicyResponseStatusSuccessHealth",className:"policyResponseStatusHealth"}):i.a.createElement(o.EuiNotificationBadge,{"data-test-subj":"endpointPolicyResponseStatusAttentionHealth"},t)),[]),d=Object(n.useCallback)((t=>t.map((t=>{const n=s.find((e=>e.name===t)),a=new policy_response_friendly_names_PolicyResponseActionFormatter(n||{},r.links.securitySolution.policyResponseTroubleshooting,e);return{label:i.a.createElement(o.EuiText,{color:n.status!==y.a.success&&n.status!==y.a.unsupported?"danger":"default","data-test-subj":"endpointPolicyResponseAction"},a.title),id:t,className:n.status!==y.a.success&&n.status!==y.a.unsupported?"policy-response-action-expanded":"",icon:p(n.status,n.status!==y.a.success?1:0),children:[{label:i.a.createElement(M,{policyResponseActionFormatter:a}),id:`action_message_${t}`,isExpanded:!0,className:"policy-response-action-item-expanded"}]}}))),[r.links.securitySolution.policyResponseTroubleshooting,p,s,e]),u=Object(n.useCallback)((()=>Object.entries(t).map((([e,t])=>{const s=c.get(e);return{label:i.a.createElement(o.EuiText,{color:s?"danger":"default",size:"s","data-test-subj":"endpointPolicyResponseConfig"},(n=e,m.has(n)||m.set(n,n.replace(/_/g," ").replace(/\b(\w)/g,(e=>e.toUpperCase()))),m.get(n))),id:e,icon:s?i.a.createElement(o.EuiNotificationBadge,{"data-test-subj":"endpointPolicyResponseStatusAttentionHealth"},s):i.a.createElement(o.EuiHealth,{color:"success","data-test-subj":"endpointPolicyResponseStatusSuccessHealth",className:"policyResponseStatusHealth"}),children:d(t.concerned_actions)};var n}))),[d,c,t]),g=Object(n.useCallback)((()=>{let e=0;for(const t of c.values())e+=t;return[{label:i.a.createElement(o.EuiText,{color:e?"danger":"default",size:"s","data-test-subj":"endpointPolicyResponseTitle"},i.a.createElement(a.FormattedMessage,{id:"xpack.securitySolution.endpoint.policyResponse.title",defaultMessage:"Policy Response"})),id:"policyResponse",icon:e?i.a.createElement(o.EuiNotificationBadge,{"data-test-subj":"endpointPolicyResponseStatusHealth"},e):void 0,children:u()}]}),[u,c])();return i.a.createElement(j,{items:g,showExpansionArrows:!0,"aria-label":"policyResponseTreeView","aria-labelledby":"policyResponseTreeView"})}));C.displayName="PolicyResponse";var A=s(691);const O=Object(n.memo)((({endpointId:e,showRevisionMessage:t=!0,onShowNeedsAttentionBadge:s})=>{var d,u,g;const{data:_,isLoading:f,isFetching:m,isError:k}=function(e,t){const s=Object(l.j)();return Object(r.useQuery)(["getEndpointPolicyResponse",e],(()=>s.get(p.e,{query:{agentId:e}})),void 0)}(e),{data:h}=Object(A.b)(e),{docLinks:R}=Object(l.k)().services,[v,x]=Object(n.useState)(),[E,S]=Object(n.useState)(),[b,w]=Object(n.useState)(new Map);Object(n.useEffect)((()=>{!_||f||m||k||(x(_.policy_response.Endpoint.policy.applied.response.configurations),S(_.policy_response.Endpoint.policy.applied.actions),w((e=>{var t;const s=new Map;return void 0!==(null==e||null===(t=e.response)||void 0===t?void 0:t.configurations)&&void 0!==(null==e?void 0:e.actions)&&Object.entries(e.response.configurations).map((([t,n])=>{let i=0;for(const t of n.concerned_actions){var o;const s=null===(o=e.actions.find((e=>e.name===t)))||void 0===o?void 0:o.status;s!==y.a.failure&&s!==y.a.warning||(i+=1)}return s.set(t,i)})),s})(_.policy_response.Endpoint.policy.applied)))}),[_,f,m,k]),Object(n.useEffect)((()=>{if(s)for(const e of b.values())if(e)return void s(!0)}),[b,s]);const j=Object(n.useMemo)((()=>v||E?null==E?void 0:E.reduce(((e,t)=>{const s=new policy_response_friendly_names_PolicyResponseActionFormatter(t,R.links.securitySolution.policyResponseTroubleshooting,null==h?void 0:h.metadata.host.os.name.toLowerCase());return s.isGeneric&&s.hasError&&e.push(s),e}),[]):[]),[R.links.securitySolution.policyResponseTroubleshooting,E,v,null==h?void 0:h.metadata.host.os.name]);return i.a.createElement(i.a.Fragment,null,t&&i.a.createElement(i.a.Fragment,null,i.a.createElement(o.EuiText,{size:"xs",color:"subdued","data-test-subj":"endpointPolicyResponseTimestamp"},i.a.createElement(a.FormattedMessage,{id:"xpack.securitySolution.endpoint.policyResponse.appliedOn",defaultMessage:"Revision {rev} applied on {date}",values:{rev:null!==(d=null==_?void 0:_.policy_response.Endpoint.policy.applied.endpoint_policy_version)&&void 0!==d?d:"",date:i.a.createElement(c.d,{value:null!==(u=null==_?void 0:_.policy_response["@timestamp"])&&void 0!==u?u:""})}})),i.a.createElement(o.EuiSpacer,{size:"s"})),k&&i.a.createElement(o.EuiEmptyPrompt,{title:i.a.createElement(a.FormattedMessage,{id:"xpack.securitySolution.endpoint.details.noPolicyResponse",defaultMessage:"No policy response available"})}),f&&i.a.createElement(o.EuiLoadingSpinner,{size:"m"}),void 0!==v&&void 0!==E&&i.a.createElement(i.a.Fragment,null,i.a.createElement(C,{hostOs:null!==(g=null==h?void 0:h.metadata.host.os.name.toLowerCase())&&void 0!==g?g:"",policyResponseConfig:v,policyResponseActions:E,policyResponseAttentionCount:b}),i.a.createElement(o.EuiSpacer,{size:"m"}),null==j?void 0:j.map((e=>i.a.createElement(i.a.Fragment,{key:e.key},i.a.createElement(M,{policyResponseActionFormatter:e}),i.a.createElement(o.EuiSpacer,{size:"m"}))))))}));O.displayName="PolicyResponse"},1279:function(e,t,s){"use strict";s.r(t),s.d(t,"EndpointPolicyResponseExtension",(function(){return a}));var n=s(4),i=s.n(n),o=s(1121);const a=Object(n.memo)((({agent:e,onShowNeedsAttentionBadge:t})=>i.a.createElement(o.a,{endpointId:e.id,onShowNeedsAttentionBadge:t,showRevisionMessage:!1})));a.displayName="EndpointPolicyResponseExtension"}}]);