/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements. 
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.ml_bundle_jsonpfunction=window.ml_bundle_jsonpfunction||[]).push([[13],{146:function(e,t,a){"use strict";a.d(t,"b",(function(){return o})),a.d(t,"a",(function(){return i}));var n=a(2),l=a(29),s=a(99);function o(e,t,a,o){const r=Object(s.d)();if(e.contains("job_id_empty"))t.jobId.valid=!1;else if(e.contains("job_id_invalid")){t.jobId.valid=!1;const e=n.i18n.translate("xpack.ml.newJob.wizard.validateJob.jobNameAllowedCharactersDescription",{defaultMessage:"Job ID can contain lowercase alphanumeric (a-z and 0-9), hyphens or underscores; must start and end with an alphanumeric character"});t.jobId.message=e}else if(e.contains("job_id_invalid_max_length"))t.jobId.valid=!1,t.jobId.message=n.i18n.translate("xpack.ml.newJob.wizard.validateJob.jobIdInvalidMaxLengthErrorMessage",{defaultMessage:"Job ID must be no more than {maxLength, plural, one {# character} other {# characters}} long.",values:{maxLength:l.b}});else if(e.contains("job_id_already_exists")){t.jobId.valid=!1;const e=n.i18n.translate("xpack.ml.newJob.wizard.validateJob.jobNameAlreadyExists",{defaultMessage:"Job ID already exists. A job ID cannot be the same as an existing job or group."});t.jobId.message=e}if(e.contains("job_group_id_invalid")){t.groupIds.valid=!1;const e=n.i18n.translate("xpack.ml.newJob.wizard.validateJob.jobGroupAllowedCharactersDescription",{defaultMessage:"Job group names can contain lowercase alphanumeric (a-z and 0-9), hyphens or underscores; must start and end with an alphanumeric character"});t.groupIds.message=e}else if(e.contains("job_group_id_invalid_max_length"))t.groupIds.valid=!1,t.groupIds.message=n.i18n.translate("xpack.ml.newJob.wizard.validateJob.jobGroupMaxLengthDescription",{defaultMessage:"Job group name must be no more than {maxLength, plural, one {# character} other {# characters}} long.",values:{maxLength:l.b}});else if(e.contains("job_group_id_already_exists")){t.groupIds.valid=!1;const e=n.i18n.translate("xpack.ml.newJob.wizard.validateJob.groupNameAlreadyExists",{defaultMessage:"Group ID already exists. A group ID cannot be the same as an existing job or group."});t.groupIds.message=e}if(e.contains("model_memory_limit_units_invalid")){t.modelMemoryLimit.valid=!1;const e=`${l.a.slice(0,l.a.length-1).join(", ")} or ${[...l.a].pop()}`,a=n.i18n.translate("xpack.ml.newJob.wizard.validateJob.modelMemoryLimitUnitsInvalidErrorMessage",{defaultMessage:"Model memory limit data unit unrecognized. It must be {str}",values:{str:e}});t.modelMemoryLimit.message=a}if(e.contains("model_memory_limit_invalid")){t.modelMemoryLimit.valid=!1;const e=(r.max_model_memory_limit||"").toUpperCase(),a=n.i18n.translate("xpack.ml.newJob.wizard.validateJob.modelMemoryLimitRangeInvalidErrorMessage",{defaultMessage:"Model memory limit cannot be higher than the maximum value of {maxModelMemoryLimit}",values:{maxModelMemoryLimit:e}});t.modelMemoryLimit.message=a}if(e.contains("detectors_duplicates")){t.duplicateDetectors.valid=!1;const e=n.i18n.translate("xpack.ml.newJob.wizard.validateJob.duplicatedDetectorsErrorMessage",{defaultMessage:"Duplicate detectors were found."});t.duplicateDetectors.message=e}if(e.contains("categorizer_detector_missing_per_partition_field")){t.categorizerMissingPerPartition.valid=!1;const e=n.i18n.translate("xpack.ml.newJob.wizard.validateJob.categorizerMissingPerPartitionFieldMessage",{defaultMessage:'Partition field must be set for detectors that reference "mlcategory" when per-partition categorization is enabled.'});t.categorizerMissingPerPartition.message=e}if(e.contains("categorizer_varying_per_partition_fields")){t.categorizerVaryingPerPartitionField.valid=!1;const e=n.i18n.translate("xpack.ml.newJob.wizard.validateJob.categorizerVaryingPerPartitionFieldNamesMessage",{defaultMessage:'Detectors with keyword "mlcategory" cannot have different partition_field_name when per-partition categorization is enabled.'});t.categorizerVaryingPerPartitionField.message=e}if(e.contains("bucket_span_empty")){t.bucketSpan.valid=!1;const e=n.i18n.translate("xpack.ml.newJob.wizard.validateJob.bucketSpanMustBeSetErrorMessage",{defaultMessage:"Bucket span must be set"});t.bucketSpan.message=e}else e.contains("bucket_span_invalid")&&(t.bucketSpan.valid=!1,t.bucketSpan.message=i(a.analysis_config.bucket_span));if(e.contains("query_empty")){t.query.valid=!1;const e=n.i18n.translate("xpack.ml.newJob.wizard.validateJob.queryCannotBeEmpty",{defaultMessage:"Datafeed query cannot be empty."});t.query.message=e}else if(e.contains("query_invalid")){t.query.valid=!1;const e=n.i18n.translate("xpack.ml.newJob.wizard.validateJob.queryIsInvalidEsQuery",{defaultMessage:"Datafeed query must be a valid elasticsearch query."});t.query.message=e}e.contains("query_delay_invalid")&&(t.queryDelay.valid=!1,t.queryDelay.message=i(o.query_delay)),e.contains("frequency_invalid")&&(t.frequency.valid=!1,t.frequency.message=i(o.frequency)),e.contains("missing_summary_count_field_name")&&(t.summaryCountField.valid=!1,t.summaryCountField.message=n.i18n.translate("xpack.ml.newJob.wizard.validateJob.summaryCountFieldMissing",{defaultMessage:"Required field as the datafeed uses aggregations."}))}function i(e){return n.i18n.translate("xpack.ml.newJob.wizard.validateJob.frequencyInvalidTimeIntervalFormatErrorMessage",{defaultMessage:"{value} is not a valid time interval format e.g. {thirtySeconds}, {tenMinutes}, {oneHour}, {sevenDays}. It also needs to be higher than zero.",values:{value:e,thirtySeconds:"30s",tenMinutes:"10m",oneHour:"1h",sevenDays:"7d"}})}},166:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(54),l=a(17),s=n.__importDefault(a(251));t.default=function(e,t,a){void 0===t&&(t=0),void 0===a&&(a=[]);var n=s.default(e,t),o=n[0],i=n[1],r=n[2];return l.useEffect(r,a),[o,i]}},251:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(17);t.default=function(e,t){void 0===t&&(t=0);var a=n.useRef(!1),l=n.useRef(),s=n.useRef(e),o=n.useCallback((function(){return a.current}),[]),i=n.useCallback((function(){a.current=!1,l.current&&clearTimeout(l.current),l.current=setTimeout((function(){a.current=!0,s.current()}),t)}),[t]),r=n.useCallback((function(){a.current=null,l.current&&clearTimeout(l.current)}),[]);return n.useEffect((function(){s.current=e}),[e]),n.useEffect((function(){return i(),r}),[t]),[o,r,i]}},257:function(e,t,a){"use strict";a.d(t,"a",(function(){return u}));var n=a(17),l=a(2),s=a(45),o=a(44),i=a(11),r=a(13);const u=({jobsAndGroupIds:e,onChange:t,adJobsApiService:a,errors:u,multiSelect:c=!1,label:d,allowSelectAll:b=!1,options:m})=>{const[g,p]=Object(n.useState)([]),j=Object(n.useMemo)((()=>new Set),[]),f=Object(n.useMemo)((()=>new Set),[]),v=Object(n.useMemo)((()=>(null!=e?e:[]).map((e=>({label:e})))),[e]),y=Object(n.useCallback)((async()=>{try{const{jobIds:e,groupIds:t}=await a.getAllJobAndGroupIds();e.forEach((e=>{j.add(e)})),t.forEach((e=>{f.add(e)})),p([...b?[{label:l.i18n.translate("xpack.ml.jobSelector.selectAllGroupLabel",{defaultMessage:"Select all"}),options:[{label:l.i18n.translate("xpack.ml.jobSelector.selectAllOptionLabel",{defaultMessage:"*"}),value:i.b}]}]:[],{label:l.i18n.translate("xpack.ml.jobSelector.jobOptionsLabel",{defaultMessage:"Jobs"}),options:e.map((e=>({label:e})))},...c?[{label:l.i18n.translate("xpack.ml.jobSelector.groupOptionsLabel",{defaultMessage:"Groups"}),options:t.map((e=>({label:e})))}]:[]])}catch(e){}}),[a]),h=Object(n.useCallback)((e=>{if(e.some((e=>e.value===i.b)))return void t({jobIds:[i.b]});const a=[],n=[];e.forEach((({label:e})=>{j.has(e)?a.push(e):f.has(e)?n.push(e):null!=m&&m.some((t=>{var a;return null===(a=t.options)||void 0===a?void 0:a.some((t=>t.label===e))}))&&a.push(e)})),t({...a.length>0?{jobIds:a}:{},...n.length>0?{groupIds:n}:{}})}),[j,f,m]);return Object(n.useEffect)((()=>{m||y()}),[]),Object(r.jsx)(o.EuiFormRow,{fullWidth:!0,label:null!=d?d:Object(r.jsx)(s.FormattedMessage,{id:"xpack.ml.jobSelector.formControlLabel",defaultMessage:"Select job"}),isInvalid:!(null==u||!u.length),error:u},Object(r.jsx)(o.EuiComboBox,{singleSelection:!c,selectedOptions:v,options:null!=m?m:g,onChange:h,fullWidth:!0,"data-test-subj":"mlAnomalyAlertJobSelection",isInvalid:!(null==u||!u.length)}))}},258:function(e,t,a){"use strict";a.d(t,"a",(function(){return d}));var n=a(82),l=a.n(n),s=a(44),o=a(17),i=a(146),r=a(18),u=a(20),c=a(13);const d=({value:e,onChange:t,label:a,...n})=>{const d=Object(o.useMemo)((()=>Object(r.composeValidators)(Object(u.f)())),[]),b=Object(o.useMemo)((()=>d(e)),[e]),m=!!e&&!!b;return Object(c.jsx)(s.EuiFormRow,{label:a,isInvalid:m,error:Object(i.a)(null!=e?e:void 0)},Object(c.jsx)(s.EuiFieldText,l()({},n,{placeholder:"15d, 6m",value:null!=e?e:"",onChange:e=>{t(e.target.value)},isInvalid:m})))}},259:function(e,t,a){"use strict";a.d(t,"a",(function(){return o})),a(17);var n=a(44),l=a(2),s=a(13);const o=({message:e})=>Object(s.jsx)(n.EuiFlexGroup,{gutterSize:"none",justifyContent:"flexEnd"},Object(s.jsx)(n.EuiFlexItem,{grow:!1},Object(s.jsx)(n.EuiBetaBadge,{label:l.i18n.translate("xpack.ml.anomalyDetectionAlert.betaBadgeLabel",{defaultMessage:"Beta"}),tooltipContent:e})))},649:function(e,t,a){"use strict";a.r(t);var n=a(17),l=a.n(n),s=a(44),o=a(2),i=a(45),r=a(166),u=a.n(r),c=a(6),d=a(257),b=a(218),m=a(121),g=a(80),p=a(252),j=a(11),f=a(258),v=a(13);const y=l.a.memo((({config:e,onChange:t,errors:a})=>{const o=Object(p.b)(e),r=Object(n.useCallback)((a=>{t({...null!=e?e:{},...a})}),[t,e]);return Object(v.jsx)(l.a.Fragment,null,Object(v.jsx)(s.EuiForm,{component:"div",isInvalid:!(null==a||!a.length),error:a},Object.entries(o).map((([e,t],a)=>{var n,u;return Object(v.jsx)(s.EuiDescribedFormGroup,{key:e,title:Object(v.jsx)("h4",null,null===(n=j.c[e])||void 0===n?void 0:n.name),description:null===(u=j.c[e])||void 0===u?void 0:u.description,fullWidth:!0,gutterSize:"s"},Object(v.jsx)(s.EuiFormRow,null,Object(v.jsx)(s.EuiSwitch,{label:Object(v.jsx)(i.FormattedMessage,{id:"xpack.ml.alertTypes.jobsHealthAlertingRule.testsSelection.enableTestLabel",defaultMessage:"Enable"}),onChange:r.bind(null,{[e]:{...o[e],enabled:!o[e].enabled}}),checked:o[e].enabled})),"delayedData"===e?Object(v.jsx)(l.a.Fragment,null,Object(v.jsx)(s.EuiSpacer,{size:"m"}),Object(v.jsx)(s.EuiFormRow,{label:Object(v.jsx)(l.a.Fragment,null,Object(v.jsx)(i.FormattedMessage,{id:"xpack.ml.alertTypes.jobsHealthAlertingRule.testsSelection.delayedData.docsCountLabel",defaultMessage:"Number of documents"}),Object(v.jsx)(s.EuiToolTip,{position:"bottom",content:Object(v.jsx)(i.FormattedMessage,{id:"xpack.ml.alertTypes.jobsHealthAlertingRule.testsSelection.delayedData.docsCountHint",defaultMessage:"The threshold for the amount of missing documents to alert upon."})},Object(v.jsx)(s.EuiIcon,{type:"questionInCircle"})))},Object(v.jsx)(s.EuiFieldNumber,{value:o.delayedData.docsCount,onChange:t=>{r({[e]:{...o[e],docsCount:Number(t.target.value)}})},min:1})),Object(v.jsx)(s.EuiSpacer,{size:"m"}),Object(v.jsx)(f.a,{label:Object(v.jsx)(l.a.Fragment,null,Object(v.jsx)(i.FormattedMessage,{id:"xpack.ml.alertTypes.jobsHealthAlertingRule.testsSelection.delayedData.timeIntervalLabel",defaultMessage:"Time interval"}),Object(v.jsx)(s.EuiToolTip,{position:"bottom",content:Object(v.jsx)(i.FormattedMessage,{id:"xpack.ml.alertTypes.jobsHealthAlertingRule.testsSelection.delayedData.timeIntervalHint",defaultMessage:"The lookback interval to check during rule execution for delayed data. By default derived from the longest bucket span and query delay."})},Object(v.jsx)(s.EuiIcon,{type:"questionInCircle"}))),value:o.delayedData.timeInterval,onChange:t=>{r({[e]:{...o[e],timeInterval:t}})}})):null)}))),Object(v.jsx)(s.EuiSpacer,{size:"l"}))}));var h=a(259),x=a(116);t.default=({ruleParams:e,setRuleParams:t,errors:a})=>{const{services:{http:l}}=Object(g.b)(),r=Object(n.useMemo)((()=>new m.a(l)),[l]),p=Object(n.useMemo)((()=>Object(b.jobsApiProvider)(r)),[r]),[f,O]=Object(n.useState)([]),M=Object(n.useMemo)((()=>{var t;return Object.values(null!==(t=e.includeJobs)&&void 0!==t?t:{}).flat()}),[e.includeJobs]),_=Object(n.useMemo)((()=>{var t;return Object.values(null!==(t=e.excludeJobs)&&void 0!==t?t:{}).flat()}),[e.excludeJobs]),I=Object(n.useCallback)((e=>a=>{t(e,a)}),[]),J=Object.values(a).flat(),w=J.length>0;return u()((function(){var t,a,n,l;const s=(null===(t=e.includeJobs)||void 0===t||null===(a=t.jobIds)||void 0===a?void 0:a[0])===j.b;s||null!==(n=e.includeJobs)&&void 0!==n&&null!==(l=n.groupIds)&&void 0!==l&&l.length?p.jobs(s?[]:e.includeJobs.groupIds).then((t=>{O([{label:o.i18n.translate("xpack.ml.jobSelector.jobOptionsLabel",{defaultMessage:"Jobs"}),options:t.map((e=>({label:e.job_id})))},{label:o.i18n.translate("xpack.ml.jobSelector.groupOptionsLabel",{defaultMessage:"Groups"}),options:[...new Set(t.map((e=>e.groups)).flat().filter((t=>{var a;return Object(x.a)(t)&&!(null!==(a=e.includeJobs.groupIds)&&void 0!==a&&a.includes(t))})))].map((e=>({label:e})))}])})):O([])}),500,[e.includeJobs]),Object(v.jsx)(s.EuiForm,{"data-test-subj":"mlJobsHealthAlertingRuleForm",invalidCallout:"none",error:J,isInvalid:w},Object(v.jsx)(h.a,{message:o.i18n.translate("xpack.ml.alertTypes.jobsHealthAlertingRule.betaBadgeTooltipContent",{defaultMessage:"Anomaly detection job health alerts are a beta feature. We'd love to hear your feedback."})}),Object(v.jsx)(d.a,{jobsAndGroupIds:M,adJobsApiService:p,onChange:Object(n.useCallback)(I("includeJobs"),[]),errors:Array.isArray(a.includeJobs)?a.includeJobs:[],multiSelect:!0,allowSelectAll:!0,label:Object(v.jsx)(i.FormattedMessage,{id:"xpack.ml.alertTypes.jobsHealthAlertingRule.includeJobs.label",defaultMessage:"Include jobs or groups"})}),Object(v.jsx)(s.EuiSpacer,{size:"m"}),Object(v.jsx)(d.a,{jobsAndGroupIds:_,adJobsApiService:p,onChange:Object(n.useCallback)((e=>{const t=I("excludeJobs");Object(c.isPopulatedObject)(e)?t(e):t(null)}),[]),errors:Array.isArray(a.excludeJobs)?a.excludeJobs:[],multiSelect:!0,label:Object(v.jsx)(i.FormattedMessage,{id:"xpack.ml.alertTypes.jobsHealthAlertingRule.excludeJobs.label",defaultMessage:"Exclude jobs or groups"}),options:f}),Object(v.jsx)(s.EuiSpacer,{size:"m"}),Object(v.jsx)(y,{config:e.testsConfig,onChange:Object(n.useCallback)(I("testsConfig"),[]),errors:Array.isArray(a.testsConfig)?a.testsConfig:[]}))}},99:function(e,t,a){"use strict";a.d(t,"g",(function(){return i})),a.d(t,"c",(function(){return r})),a.d(t,"d",(function(){return u})),a.d(t,"e",(function(){return c})),a.d(t,"f",(function(){return d})),a.d(t,"b",(function(){return b})),a.d(t,"a",(function(){return m}));var n=a(81);let l={anomaly_detectors:{},datafeeds:{}},s={};const o={cloudId:null,isCloud:!1,isCloudTrial:!1,deploymentId:null};async function i(){try{var e;const t=await n.ml.mlInfo();return l=t.defaults,s=t.limits,o.cloudId=null!==(e=t.cloudId)&&void 0!==e?e:null,o.isCloud=void 0!==t.cloudId,o.isCloudTrial=!0===t.isCloudTrial,o.deploymentId=t.cloudId?m(t.cloudId):null,{defaults:l,limits:s,cloudId:o}}catch(e){return{defaults:l,limits:s,cloudId:o}}}function r(){return l}function u(){return s}function c(){return o.isCloud}function d(){return o.isCloudTrial}function b(){return o.deploymentId}function m(e){const t=e.replace(/^(.+)?:/,"");try{const e=atob(t).match(/^.+\$(.+)(?=\$)/);return null!==e&&2===e.length?e[1]:null}catch(e){return null}}}}]);