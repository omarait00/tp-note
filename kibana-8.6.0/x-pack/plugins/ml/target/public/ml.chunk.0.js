/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements. 
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.ml_bundle_jsonpfunction=window.ml_bundle_jsonpfunction||[]).push([[0],{136:function(e,t,s){"use strict";s.r(t),s.d(t,"mlResultsService",(function(){return y})),s.d(t,"mlResultsServiceProvider",(function(){return b}));var l=s(25),r=s(8),i=s(6),c=s(88),o=s(151),a=s(220),n=s(7),u=s(103),d=s(18);function m(e){return{getMetricData(t,s,r,n,m,g,_,f,y,b,h){const p=null==h?void 0:h.script_fields,v=Object(a.b)(h),j=[],O=[{range:{[_]:{gte:f,lte:y,format:"epoch_millis"}}},...r?[r]:[]];s.forEach((e=>{0!==e.fieldValue.length?O.push({term:{[e.fieldName]:e.fieldValue}}):(j.push({bool:{must:[{term:{[e.fieldName]:""}}]}}),j.push({bool:{must_not:[{exists:{field:e.fieldName}}]}}))}));const q={query:{bool:{must:O}},size:0,_source:!1,aggs:{byTime:{date_histogram:{field:_,fixed_interval:`${b}ms`,min_doc_count:0}}},...Object(d.isRuntimeMappings)(null==h?void 0:h.runtime_mappings)?{runtime_mappings:null==h?void 0:h.runtime_mappings}:{}};if(j.length>0&&(q.query.bool.should=j,q.query.bool.minimum_should_match=j.length/2),q.aggs.byTime.aggs={},void 0!==m&&""!==m&&n){const e={[n]:{}};if(void 0!==p&&void 0!==p[m]?e[n].script=p[m].script:e[n].field=m,"percentiles"===n&&(e[n].percents=[c.b]),Object(i.isPopulatedObject)(v)){var x;const e=Object.keys(v)[0],t={...null!==(x=v[e].aggs)&&void 0!==x?x:v[e].aggregations},s=Object(o.a)(t,m);void 0!==s&&(t.metric=s,delete t[m]),q.aggs.byTime.aggs=t}else q.aggs.byTime.aggs.metric=e}else if(void 0!==g&&n===u.a.CARDINALITY&&"object"==typeof v&&Object.keys(v).length>0){var k;const e=Object.keys(v)[0],t={...null!==(k=v[e].aggs)&&void 0!==k?k:v[e].aggregations},s=Object(o.a)(t,g);void 0!==s&&(t.metric=s),q.aggs.byTime.aggs=t}return e.esSearch$({index:t,body:q}).pipe(Object(l.map)((e=>{var t,s,l;const r={success:!0,results:{}};return(null!==(t=null==e||null===(s=e.aggregations)||void 0===s||null===(l=s.byTime)||void 0===l?void 0:l.buckets)&&void 0!==t?t:[]).forEach((e=>{if("count"===n)r.results[e.key]=e.doc_count;else{var t,s;const l=null==e||null===(t=e.metric)||void 0===t?void 0:t.value,i=null==e||null===(s=e.metric)||void 0===s?void 0:s.values;if(0===e.doc_count)r.results[e.key]=null;else if(void 0!==l)r.results[e.key]=l;else if(void 0!==i){const t=i[c.b];r.results[e.key]=isNaN(t)?null:t}else r.results[e.key]=null}})),r})))},getModelPlotOutput(t,s,i,c,o,a,n){const u={success:!0,results:{}},d=void 0===n?{max:"max",min:"min"}:{max:n.max,min:n.min},m=[{term:{job_id:t}},{range:{timestamp:{gte:c,lte:o,format:"epoch_millis"}}}];Object(r.each)(i,(e=>{m.push({term:{[e.fieldName]:e.fieldValue}})}));const g=[{term:{detector_index:s}},{bool:{must_not:[{exists:{field:"detector_index"}}]}}];return e.results.anomalySearch$({body:{size:0,query:{bool:{filter:[{query_string:{query:"result_type:model_plot",analyze_wildcard:!0}},{bool:{must:m,should:g,minimum_should_match:1}}]}},aggs:{times:{date_histogram:{field:"timestamp",fixed_interval:`${a}ms`,min_doc_count:0},aggs:{actual:{avg:{field:"actual"}},modelUpper:{[d.max]:{field:"model_upper"}},modelLower:{[d.min]:{field:"model_lower"}}}}}}},[t]).pipe(Object(l.map)((e=>{const t=Object(r.get)(e,["aggregations","times","buckets"],[]);return Object(r.each)(t,(e=>{const t=e.key,s=Object(r.get)(e,["modelUpper","value"]),l=Object(r.get)(e,["modelLower","value"]),i=Object(r.get)(e,["actual","value"]);u.results[t]={actual:i,modelUpper:void 0===s||!1===isFinite(s)?null:s,modelLower:void 0===l||!1===isFinite(l)?null:l}})),u})))},getRecordsForCriteria(t,s,i,c,o,a,u){const d={success:!0,records:[]},m=[{range:{timestamp:{gte:c,lte:o,format:"epoch_millis"}}},{range:{record_score:{gte:i}}}];if(t&&t.length>0&&(1!==t.length||"*"!==t[0])){let e="";Object(r.each)(t,((t,s)=>{s>0&&(e+=" OR "),e+="job_id:",e+=t})),m.push({query_string:{analyze_wildcard:!1,query:e}})}if(Object(r.each)(s,(e=>{m.push({term:{[e.fieldName]:e.fieldValue}})})),void 0!==u){const e=void 0!==u?n.c.toML(u):u;m.push({term:{function_description:e}})}return e.results.anomalySearch$({body:{size:void 0!==a?a:100,query:{bool:{filter:[{query_string:{query:"result_type:record",analyze_wildcard:!1}},{bool:{must:m}}]}},sort:[{record_score:{order:"desc"}}]}},t).pipe(Object(l.map)((e=>(e.hits.total.value>0&&Object(r.each)(e.hits.hits,(e=>{d.records.push(e._source)})),d))))},getScheduledEventsByBucket(t,s,i,c,o,a){const n={success:!0,events:{}},u=[{range:{timestamp:{gte:s,lte:i,format:"epoch_millis"}}},{exists:{field:"scheduled_events"}}];if(t&&t.length>0&&(1!==t.length||"*"!==t[0])){let e="";Object(r.each)(t,((t,s)=>{e+=`${s>0?" OR ":""}job_id:${t}`})),u.push({query_string:{analyze_wildcard:!1,query:e}})}return e.results.anomalySearch$({body:{size:0,query:{bool:{filter:[{query_string:{query:"result_type:bucket",analyze_wildcard:!1}},{bool:{must:u}}]}},aggs:{jobs:{terms:{field:"job_id",min_doc_count:1,size:o},aggs:{times:{date_histogram:{field:"timestamp",fixed_interval:`${c}ms`,min_doc_count:1},aggs:{events:{terms:{field:"scheduled_events",size:a}}}}}}}}},t).pipe(Object(l.map)((e=>{const t=Object(r.get)(e,["aggregations","jobs","buckets"],[]);return Object(r.each)(t,(e=>{const t=e.key,s={},l=Object(r.get)(e,["times","buckets"],[]);Object(r.each)(l,(e=>{const t=e.key,l=Object(r.get)(e,["events","buckets"]);s[t]=l.map((e=>e.key))})),n.events[t]=s})),n})))},fetchPartitionFieldsValues:(t,s,l,r,i)=>e.results.fetchPartitionFieldsValues(t,s,l,r,i),getRecordsForInfluencer$(t,s,i,c,o,a,n){const u={success:!0,records:[]},d=[{range:{timestamp:{gte:c,lte:o,format:"epoch_millis"}}},{range:{record_score:{gte:i}}}];if(t&&t.length>0&&(1!==t.length||"*"!==t[0])){let e="";Object(r.each)(t,((t,s)=>{s>0&&(e+=" OR "),e+="job_id:",e+=t})),d.push({query_string:{analyze_wildcard:!1,query:e}})}return void 0!==n&&d.push(n),s.length>0&&d.push({bool:{should:s.map((e=>({nested:{path:"influencers",query:{bool:{must:[{match:{"influencers.influencer_field_name":e.fieldName}},{match:{"influencers.influencer_field_values":e.fieldValue}}]}}}}))),minimum_should_match:1}}),e.results.anomalySearch$({body:{size:void 0!==a?a:100,query:{bool:{filter:[{query_string:{query:"result_type:record",analyze_wildcard:!1}},{bool:{must:d}}]}},sort:[{record_score:{order:"desc"}}]}},t).pipe(Object(l.map)((e=>(e.hits.total.value>0&&Object(r.each)(e.hits.hits,(e=>{u.records.push(e._source)})),u))))}}}var g=s(106),_=s(100);function f(e){const t=2e4;return{getScoresByBucket:(t,s,l,i,c=10,o=1,a=0)=>new Promise(((n,u)=>{var d;const m={success:!0,results:{}},g=[{range:{timestamp:{gte:s,lte:l,format:"epoch_millis"}}},{range:{anomaly_score:{gte:a}}}];if(t&&t.length>0&&(1!==t.length||"*"!==t[0])){let e="";Object(r.each)(t,((t,s)=>{s>0&&(e+=" OR "),e+="job_id:",e+=t})),g.push({query_string:{analyze_wildcard:!1,query:e}})}e.results.anomalySearch({size:0,body:{query:{bool:{filter:[{query_string:{query:"result_type:bucket",analyze_wildcard:!1}},{bool:{must:g}}]}},aggs:{jobsCardinality:{cardinality:{field:"job_id"}},jobId:{terms:{field:"job_id",size:null!==(d=null==t?void 0:t.length)&&void 0!==d?d:1,order:{anomalyScore:"desc"}},aggs:{anomalyScore:{max:{field:"anomaly_score"}},bucketTruncate:{bucket_sort:{from:(o-1)*c,size:0===c?1:c}},byTime:{date_histogram:{field:"timestamp",fixed_interval:`${i}ms`,min_doc_count:1,extended_bounds:{min:s,max:l}},aggs:{anomalyScore:{max:{field:"anomaly_score"}}}}}}}}},t).then((e=>{var t,s,l;const i=Object(r.get)(e,["aggregations","jobId","buckets"],[]);Object(r.each)(i,(e=>{const t=e.key,s={},l=Object(r.get)(e,["byTime","buckets"],[]);Object(r.each)(l,(e=>{if(void 0!==Object(r.get)(e,["anomalyScore","value"])){const t=e.key;s[t]=Object(r.get)(e,["anomalyScore","value"])}})),m.results[t]=s})),m.cardinality=null!==(t=null===(s=e.aggregations)||void 0===s||null===(l=s.jobsCardinality)||void 0===l?void 0:l.value)&&void 0!==t?t:0,n(m)})).catch((e=>{u(e)}))})),getTopInfluencers:(t,s,l,i=_.a,c=10,o=1,a=[],n)=>new Promise(((u,d)=>{const m={success:!0,influencers:{}},g=[{range:{timestamp:{gte:s,lte:l,format:"epoch_millis"}}},{range:{influencer_score:{gt:0}}}];if(t&&t.length>0&&(1!==t.length||"*"!==t[0])){let e="";Object(r.each)(t,((t,s)=>{s>0&&(e+=" OR "),e+="job_id:",e+=t})),g.push({query_string:{analyze_wildcard:!1,query:e}})}void 0!==n&&g.push(n),a.length>0&&g.push({bool:{should:a.map((e=>({bool:{must:[{term:{influencer_field_name:e.fieldName}},{term:{influencer_field_value:e.fieldValue}}]}}))),minimum_should_match:1}}),e.results.anomalySearch({size:0,body:{query:{bool:{filter:[{query_string:{query:"result_type:influencer",analyze_wildcard:!1}},{bool:{must:g}}]}},aggs:{influencerFieldNames:{terms:{field:"influencer_field_name",size:5,order:{maxAnomalyScore:"desc"}},aggs:{maxAnomalyScore:{max:{field:"influencer_score"}},influencerFieldValues:{terms:{field:"influencer_field_value",size:i||_.a,order:{maxAnomalyScore:"desc"}},aggs:{bucketTruncate:{bucket_sort:{from:(o-1)*c,size:c}},maxAnomalyScore:{max:{field:"influencer_score"}},sumAnomalyScore:{sum:{field:"influencer_score"}}}}}}}}},t).then((e=>{const t=Object(r.get)(e,["aggregations","influencerFieldNames","buckets"],[]);Object(r.each)(t,(e=>{const t=e.key,s=[],l=Object(r.get)(e,["influencerFieldValues","buckets"],[]);Object(r.each)(l,(e=>{const t={influencerFieldValue:e.key,maxAnomalyScore:e.maxAnomalyScore.value,sumAnomalyScore:e.sumAnomalyScore.value};s.push(t)})),m.influencers[t]=s})),u(m)})).catch((e=>{d(e)}))})),getTopInfluencerValues:(t,s,l,i,c)=>new Promise(((o,a)=>{const n={success:!0,results:[]},u=[{range:{timestamp:{gte:l,lte:i,format:"epoch_millis"}}}];if(t&&t.length>0&&(1!==t.length||"*"!==t[0])){let e="";Object(r.each)(t,((t,s)=>{s>0&&(e+=" OR "),e+="job_id:",e+=t})),u.push({query_string:{analyze_wildcard:!1,query:e}})}e.results.anomalySearch({size:0,body:{query:{bool:{filter:[{query_string:{query:`result_type:influencer AND influencer_field_name: ${Object(g.c)(s)}`,analyze_wildcard:!1}},{bool:{must:u}}]}},aggs:{influencerFieldValues:{terms:{field:"influencer_field_value",size:c||2,order:{maxAnomalyScore:"desc"}},aggs:{maxAnomalyScore:{max:{field:"influencer_score"}},sumAnomalyScore:{sum:{field:"influencer_score"}}}}}}},t).then((e=>{const t=Object(r.get)(e,["aggregations","influencerFieldValues","buckets"],[]);Object(r.each)(t,(e=>{const t={influencerFieldValue:e.key,maxAnomalyScore:e.maxAnomalyScore.value,sumAnomalyScore:e.sumAnomalyScore.value};n.results.push(t)})),o(n)})).catch((e=>{a(e)}))})),getOverallBucketScores:(t,s,l,i,c,o)=>new Promise(((a,n)=>{const u={success:!0,results:{}};e.overallBuckets({jobId:t,topN:s,bucketSpan:c,start:l,end:i,overallScore:o}).then((e=>{const t=Object(r.get)(e,["overall_buckets"],[]);Object(r.each)(t,(e=>{const t=Object(r.get)(e,["overall_score"]);void 0!==t&&(u.results[e.timestamp]=t)})),a(u)})).catch((e=>{n(e)}))})),getInfluencerValueMaxScoreByTime:(t,s,l,i,c,o,a=_.a,n=_.i,u=1,d,m)=>new Promise(((f,y)=>{const b={success:!0,results:{}},h=[{range:{timestamp:{gte:i,lte:c,format:"epoch_millis"}}},{range:{influencer_score:{gt:void 0!==m?m:0}}}];if(t&&t.length>0&&(1!==t.length||"*"!==t[0])){let e="";Object(r.each)(t,((t,s)=>{s>0&&(e+=" OR "),e+=`job_id:${t}`})),h.push({query_string:{analyze_wildcard:!1,query:e}})}if(void 0!==d&&h.push(d),l&&l.length>0){let e="";Object(r.each)(l,((t,s)=>{s>0&&(e+=" OR "),t.trim().length>0?e+=`influencer_field_value:${Object(g.c)(t)}`:e+=`influencer_field_value:"${t}"`})),h.push({query_string:{analyze_wildcard:!1,query:e}})}e.results.anomalySearch({size:0,body:{query:{bool:{filter:[{query_string:{query:`result_type:influencer AND influencer_field_name: ${Object(g.c)(s)}`,analyze_wildcard:!1}},{bool:{must:h}}]}},aggs:{influencerValuesCardinality:{cardinality:{field:"influencer_field_value"}},influencerFieldValues:{terms:{field:"influencer_field_value",size:a||_.a,order:{maxAnomalyScore:"desc"}},aggs:{maxAnomalyScore:{max:{field:"influencer_score"}},bucketTruncate:{bucket_sort:{from:(u-1)*n,size:n}},byTime:{date_histogram:{field:"timestamp",fixed_interval:`${o}ms`,min_doc_count:1},aggs:{maxAnomalyScore:{max:{field:"influencer_score"}}}}}}}}},t).then((e=>{var t,s,l;const i=Object(r.get)(e,["aggregations","influencerFieldValues","buckets"],[]);Object(r.each)(i,(e=>{const t=e.key,s={},l=Object(r.get)(e,["byTime","buckets"],[]);Object(r.each)(l,(e=>{const t=e.key,l=e.maxAnomalyScore.value;s[t]=l})),b.results[t]=s})),b.cardinality=null!==(t=null===(s=e.aggregations)||void 0===s||null===(l=s.influencerValuesCardinality)||void 0===l?void 0:l.value)&&void 0!==t?t:0,f(b)})).catch((e=>{y(e)}))})),getRecordInfluencers:(t,s,l,i,c)=>new Promise(((o,a)=>{const n={success:!0,records:[]},u=[{nested:{path:"influencers",query:{bool:{must:[{exists:{field:"influencers"}}]}}}},{range:{timestamp:{gte:l,lte:i,format:"epoch_millis"}}},{range:{record_score:{gte:s}}}];if(t&&t.length>0&&(1!==t.length||"*"!==t[0])){let e="";Object(r.each)(t,((t,s)=>{s>0&&(e+=" OR "),e+="job_id:",e+=t})),u.push({query_string:{analyze_wildcard:!1,query:e}})}e.results.anomalySearch({size:void 0!==c?c:100,body:{_source:["job_id","detector_index","influencers","record_score"],query:{bool:{filter:[{query_string:{query:"result_type:record",analyze_wildcard:!1}},{bool:{must:u}}]}},sort:[{record_score:{order:"desc"}}]}},t).then((e=>{e.hits.total.value>0&&Object(r.each)(e.hits.hits,(e=>{n.records.push(e._source)})),o(n)})).catch((e=>{a(e)}))})),getRecordsForDetector:(t,s,l,i,c,o,a,n,u)=>new Promise(((d,m)=>{const g={success:!0,records:[]},_=[{range:{timestamp:{gte:a,lte:n,format:"epoch_millis"}}},{term:{job_id:t}},{term:{detector_index:s}},{range:{record_score:{gte:o}}}];i&&c?_.push({nested:{path:"influencers",query:{bool:{must:[{match:{"influencers.influencer_field_name":i}},{match:{"influencers.influencer_field_values":c}}]}}}}):!0===l&&_.push({nested:{path:"influencers",query:{bool:{must:[{exists:{field:"influencers"}}]}}}}),e.results.anomalySearch({size:void 0!==u?u:100,body:{query:{bool:{filter:[{query_string:{query:"result_type:record",analyze_wildcard:!1}},{bool:{must:_}}]}},sort:[{record_score:{order:"desc"}}]}},[t]).then((e=>{e.hits.total.value>0&&Object(r.each)(e.hits.hits,(e=>{g.records.push(e._source)})),d(g)})).catch((e=>{m(e)}))})),getEventRateData:(t,s,l,c,o,a,n,u)=>new Promise(((d,m)=>{const g={success:!0,results:{}},_=[{range:{[l]:{gte:c,lte:o,format:"epoch_millis"}}}];s&&_.push(s),e.esSearch({index:t,size:0,body:{query:{bool:{must:_}},_source:{excludes:[]},aggs:{eventRate:{date_histogram:{field:l,fixed_interval:`${a}ms`,min_doc_count:0,extended_bounds:{min:c,max:o}}}},...Object(i.isPopulatedObject)(n)&&s?{runtime_mappings:n}:{}},...null!=u?u:{}}).then((e=>{const t=Object(r.get)(e,["aggregations","eventRate","buckets"],[]);Object(r.each)(t,(e=>{const t=e.key;g.results[t]=e.doc_count})),g.total=e.hits.total.value,d(g)})).catch((e=>{m(e)}))})),getEventDistributionData:(s,l,i=null,o,a,n,u,d,m,g)=>new Promise(((_,f)=>{if(void 0===l)return _([]);const y=[];y.push({range:{[u]:{gte:d,lte:m,format:"epoch_millis"}}}),o&&y.push(o),null!==i&&y.push({term:{[i.fieldName]:i.fieldValue}});const b={query:{function_score:{query:{bool:{must:y}},functions:[{random_score:{seed:10,field:"_seq_no"}}]}},size:0,_source:{excludes:[]},aggs:{sample:{sampler:{shard_size:t},aggs:{byTime:{date_histogram:{field:u,fixed_interval:`${g}ms`,min_doc_count:1},aggs:{entities:{terms:{field:l.fieldName,size:10,min_doc_count:1}}}}}}}};if(void 0!==n&&""!==n&&"string"==typeof a){b.aggs.sample.aggs.byTime.aggs.entities.aggs={};const e={[a]:{field:n}};"percentiles"===a&&(e[a].percents=[c.b]),"cardinality"===a&&(e[a].precision_threshold=100),b.aggs.sample.aggs.byTime.aggs.entities.aggs.metric=e}e.esSearch({index:s,body:b,track_total_hits:!0}).then((e=>{const s=e.hits.total.value,l=Object(r.get)(e,["_shards","successful"],0);let i=1;s>l*t&&(i=s/(l*t));const c=Object(r.get)(e,["aggregations","sample","byTime","buckets"],[]).reduce(((e,t)=>{const s=+t.key;return Object(r.get)(t,["entities","buckets"],[]).forEach((t=>{let l="count"===a?t.doc_count:t.metric.value;"count"!==a&&"cardinality"!==a&&"sum"!==a||(l*=i),e.push({date:s,entity:t.key,value:l})})),e}),[]);_(c)})).catch((e=>{f(e)}))})),getRecordMaxScoreByTime:(t,s,l,i,c,o)=>new Promise(((a,u)=>{const d={success:!0,results:{}},m=[{range:{timestamp:{gte:l,lte:i,format:"epoch_millis"}}},{term:{job_id:t}}];if(Object(r.each)(s,(e=>{m.push({term:{[e.fieldName]:e.fieldValue}})})),void 0!==o){const e=void 0!==o?n.c.toML(o):o;m.push({term:{function_description:e}})}e.results.anomalySearch({size:0,body:{query:{bool:{filter:[{query_string:{query:"result_type:record",analyze_wildcard:!0}},{bool:{must:m}}]}},aggs:{times:{date_histogram:{field:"timestamp",fixed_interval:`${c}ms`,min_doc_count:1},aggs:{recordScore:{max:{field:"record_score"}}}}}}},[t]).then((e=>{const t=Object(r.get)(e,["aggregations","times","buckets"],[]);Object(r.each)(t,(e=>{const t=e.key;d.results[t]={score:Object(r.get)(e,["recordScore","value"])}})),a(d)})).catch((e=>{u(e)}))}))}}const y=b(s(81).ml);function b(e){return{...f(e),...m(e)}}}}]);