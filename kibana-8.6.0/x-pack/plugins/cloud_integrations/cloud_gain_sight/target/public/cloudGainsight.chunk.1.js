/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements. 
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.cloudGainsight_bundle_jsonpfunction=window.cloudGainsight_bundle_jsonpfunction||[]).push([[1],[,,,,,function(t,i,n){t.exports=n(1)(644)},function(t,i,n){t.exports=n(1)(992)},function(t,i,n){t.exports=n(1)(16)},function(t,i,n){t.exports=n(1)(17)},function(t,i,n){t.exports=n(1)(445)},function(t,i,n){"use strict";n.r(i),n.d(i,"GainsightShipper",(function(){return f}));var e=n(5),s=n.n(e),o=n(6),a=n.n(o),r=n(7),c=n.n(r),g=n(8),u=n.n(g),p=n(0),d=n.n(p),h=n(9),l=n.n(h),f=function(){function t(i,n){c()(this,t),d()(this,"lastClusterName",void 0),d()(this,"gainsightApi",void 0),this.initContext=n;var e=Object.assign({},(a()(i),i));this.gainsightApi=function(t){var i=t.gainsightOrgId,n=t.scriptUrl,e=void 0===n?"web-sdk.aptrinsic.com/api/aptrinsic.js":n,s=t.cssFileEndpoint,o=void 0===s?"web-sdk.aptrinsic.com/style.css":s,a=t.widgetFileEndpoint;!function(t,i,n,e,s){var o="aptrinsic";t[o]=t[o]||function(){(t[o].q=t[o].q||[]).push(arguments)},t[o].p=e,t[o].c=s;var a=i.createElement("script");a.async=!1,a.src=n+"?a="+e;var r=i.getElementsByTagName("script")[0];r.parentNode.insertBefore(a,r)}(window,document,e,i,{cssFileEndpoint:o,widgetFileEndpoint:void 0===a?"web-sdk.aptrinsic.com/widget/aptrinsic-widget.js ":a});var r=window.aptrinsic;if(!r||!r.init)throw new Error("Gainsight snippet failed to load. Check browser logs for more information.");return r}(e)}var i;return u()(t,[{key:"extendContext",value:function(t){this.initContext.logger.debug("Received context ".concat(JSON.stringify(t)));var i=t.userId,n=t.cluster_name;this.gainsightApi("set","globalContext",{kibanaUserId:i}),n&&n!==this.lastClusterName?(this.initContext.logger.debug("Calling identify with userId ".concat(i)),this.gainsightApi("identify",{id:n,userType:"deployment"}),this.lastClusterName=n):this.initContext.logger.debug("Identify has already been called with ".concat(i," and ").concat(n))}},{key:"optIn",value:function(t){this.initContext.logger.debug("Setting gainsight to optIn ".concat(t)),t?this.gainsightApi("config","enableTag",!0):this.gainsightApi("config","enableTag",!1)}},{key:"reportEvents",value:function(t){var i=this;this.initContext.logger.debug("Reporting ".concat(t.length," events to gainsight")),t.forEach((function(t){i.gainsightApi("track",t.event_type,t.properties)}))}},{key:"flush",value:(i=s()(l.a.mark((function t(){return l.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:case"end":return t.stop()}}),t)}))),function(){return i.apply(this,arguments)})},{key:"shutdown",value:function(){}}]),t}();d()(f,"shipperName","Gainsight")}]]);