/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements. 
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.observability_bundle_jsonpfunction=window.observability_bundle_jsonpfunction||[]).push([[16],{144:function(e,t,n){"use strict";n.r(t),n.d(t,"buildFilterLabel",(function(){return d})),n.d(t,"FilterValueLabel",(function(){return o}));var i=n(0),a=n.n(i),l=n(72),r=n(75),u=n(80),s=n(6);function d({field:e,value:t,label:n,dataView:i,negate:a}){const l=i.getFieldByName(e),u=t instanceof Array&&t.length>1?Object(r.buildPhrasesFilter)(l,t,i):Object(r.buildPhraseFilter)(l,t,i);return u.meta.type=t instanceof Array&&t.length>1?"phrases":"phrase",u.meta.value=t,u.meta.key=n,u.meta.alias=null,u.meta.negate=a,u.meta.disabled=!1,u}function o({label:e,field:t,value:n,negate:i,dataView:r,invertFilter:o,removeFilter:b,allowExclusion:c=!0}){const f=Object(l.injectI18n)(u.FilterItem),g=d({field:t,value:n,label:e,dataView:r,negate:i}),{services:{uiSettings:m}}=Object(s.useKibana)();return r?a.a.createElement(f,{indexPatterns:[r],id:`${t}-${n}-${i}`,filter:g,onRemove:()=>{b(t,n,!1)},onUpdate:e=>{e.meta.negate!==i&&o({field:t,value:n,negate:i})},uiSettings:m,hiddenPanelOptions:[...c?[]:["negateFilter"],"pinFilter","editFilter","disableFilter"]}):null}t.default=o}}]);