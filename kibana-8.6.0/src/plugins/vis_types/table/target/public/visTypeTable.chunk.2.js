(window.visTypeTable_bundle_jsonpfunction=window.visTypeTable_bundle_jsonpfunction||[]).push([[2],{36:function(e,a,t){"use strict";t.r(a),t.d(a,"default",(function(){return v}));var s=t(5),l=t(1),o=t.n(l),i=t(11),n=t(0),r=t(23),u=t(8),p=t(27),b=t(4);const c=[{value:b.a.SUM,text:n.i18n.translate("visTypeTable.totalAggregations.sumText",{defaultMessage:"Sum"})},{value:b.a.AVG,text:n.i18n.translate("visTypeTable.totalAggregations.averageText",{defaultMessage:"Average"})},{value:b.a.MIN,text:n.i18n.translate("visTypeTable.totalAggregations.minText",{defaultMessage:"Min"})},{value:b.a.MAX,text:n.i18n.translate("visTypeTable.totalAggregations.maxText",{defaultMessage:"Max"})},{value:b.a.COUNT,text:n.i18n.translate("visTypeTable.totalAggregations.countText",{defaultMessage:"Count"})}];var g=t(6);const{tabifyGetColumns:T}=u.search;function v({aggs:e,stateParams:a,setValidity:t,setValue:u}){const b=Object(l.useMemo)((()=>[{value:"",text:n.i18n.translate("visTypeTable.params.defaultPercentageCol",{defaultMessage:"Donâ€™t show"})},...T(e.getResponseAggs(),!0).filter((e=>"number"===Object(s.get)(e.aggConfig.toSerializedFieldFormat(),"id"))).map((({name:e})=>({value:e,text:e})))]),[e]),v=""===a.perPage||a.perPage>0;return Object(l.useEffect)((()=>{t(v)}),[v,t]),Object(l.useEffect)((()=>{!b.find((({value:e})=>e===a.percentageCol))&&b[0]&&b[0].value!==a.percentageCol&&u("percentageCol",b[0].value)}),[b,a.percentageCol,t,u]),Object(g.jsx)(i.EuiPanel,{paddingSize:"s"},Object(g.jsx)(p.NumberInputOption,{label:Object(g.jsx)(o.a.Fragment,null,Object(g.jsx)(r.FormattedMessage,{id:"visTypeTable.params.perPageLabel",defaultMessage:"Max rows per page"})," ",Object(g.jsx)(i.EuiIconTip,{content:"Leaving this field empty means it will use number of buckets from the response.",position:"right"})),isInvalid:!v,min:1,paramName:"perPage",value:a.perPage,setValue:u}),Object(g.jsx)(p.SwitchOption,{label:n.i18n.translate("visTypeTable.params.showMetricsLabel",{defaultMessage:"Show metrics for every bucket/level"}),paramName:"showMetricsAtAllLevels",value:a.showMetricsAtAllLevels,setValue:u,"data-test-subj":"showMetricsAtAllLevels"}),Object(g.jsx)(p.SwitchOption,{label:n.i18n.translate("visTypeTable.params.autoFitRow",{defaultMessage:"Auto fit rows to content"}),paramName:"autoFitRowToContent",value:a.autoFitRowToContent,setValue:u,"data-test-subj":"autoFitRowToContent"}),Object(g.jsx)(p.SwitchOption,{label:n.i18n.translate("visTypeTable.params.showPartialRowsLabel",{defaultMessage:"Show partial rows"}),tooltip:n.i18n.translate("visTypeTable.params.showPartialRowsTip",{defaultMessage:"Show rows that have partial data. This will still calculate metrics for every bucket/level, even if they are not displayed."}),paramName:"showPartialRows",value:a.showPartialRows,setValue:u,"data-test-subj":"showPartialRows"}),Object(g.jsx)(p.SwitchOption,{label:n.i18n.translate("visTypeTable.params.showToolbarLabel",{defaultMessage:"Show toolbar"}),paramName:"showToolbar",value:a.showToolbar,setValue:u}),Object(g.jsx)(p.SwitchOption,{label:n.i18n.translate("visTypeTable.params.showTotalLabel",{defaultMessage:"Show total"}),paramName:"showTotal",value:a.showTotal,setValue:u,"data-test-subj":"showTotal"}),Object(g.jsx)(p.SelectOption,{label:n.i18n.translate("visTypeTable.params.totalFunctionLabel",{defaultMessage:"Total function"}),disabled:!a.showTotal,options:c,paramName:"totalFunc",value:a.totalFunc,setValue:u,"data-test-subj":"totalFunction"}),Object(g.jsx)(p.SelectOption,{label:n.i18n.translate("visTypeTable.params.PercentageColLabel",{defaultMessage:"Percentage column"}),options:b,paramName:"percentageCol",value:a.percentageCol,setValue:u,id:"datatableVisualizationPercentageCol"}))}}}]);