(window.console_bundle_jsonpfunction=window.console_bundle_jsonpfunction||[]).push([[2],{69:function(e,t,s){"use strict";s.r(t),s.d(t,"DevToolsSettingsModal",(function(){return b}));var a=s(1),o=s.n(a),l=s(25),n=s(4),i=s(28),c=s(27),u=s(43),r=s(26);const d=e=>n.i18n.translate("console.settingsPage.refreshInterval.everyNMinutesTimeInterval",{defaultMessage:"Every {value} {value, plural, one {minute} other {minutes}}",values:{value:e}}),g=[0,1,10,20,60].map((e=>({value:(6e4*e).toString(),inputDisplay:0===e?n.i18n.translate("console.settingsPage.refreshInterval.onceTimeInterval",{defaultMessage:"Once, when console loads"}):60===e?n.i18n.translate("console.settingsPage.refreshInterval.everyHourTimeInterval",{defaultMessage:"Every hour"}):d(e)}))),b=e=>{const[t,s]=Object(l.useState)(e.settings.fontSize),[a,d]=Object(l.useState)(e.settings.wrapMode),[b,j]=Object(l.useState)(e.settings.autocomplete.fields),[m,p]=Object(l.useState)(e.settings.autocomplete.indices),[O,f]=Object(l.useState)(e.settings.autocomplete.templates),[M,S]=Object(l.useState)(e.settings.autocomplete.dataStreams),[x,h]=Object(l.useState)(e.settings.polling),[E,v]=Object(l.useState)(e.settings.pollInterval),[F,y]=Object(l.useState)(e.settings.tripleQuotes),[P,w]=Object(l.useState)(e.settings.isHistoryEnabled),[C,L]=Object(l.useState)(e.settings.isKeyboardShortcutsEnabled),k=[{id:"fields",label:n.i18n.translate("console.settingsPage.fieldsLabelText",{defaultMessage:"Fields"}),stateSetter:j},{id:"indices",label:n.i18n.translate("console.settingsPage.indicesAndAliasesLabelText",{defaultMessage:"Indices and aliases"}),stateSetter:p},{id:"templates",label:n.i18n.translate("console.settingsPage.templatesLabelText",{defaultMessage:"Templates"}),stateSetter:f},{id:"dataStreams",label:n.i18n.translate("console.settingsPage.dataStreamsLabelText",{defaultMessage:"Data streams"}),stateSetter:S}],T={fields:b,indices:m,templates:O,dataStreams:M},I=Object(l.useCallback)((e=>{const t=parseInt(e,10);h(!!t),v(t)}),[]),R=Object(l.useCallback)((t=>{e.editorInstance&&(Object(u.b)(e.editorInstance),L(t))}),[e.editorInstance]),B=Object(l.useCallback)((e=>w(e)),[]),H=b||m||O||M?Object(r.jsx)(l.Fragment,null,Object(r.jsx)(c.EuiFormRow,{label:Object(r.jsx)(i.FormattedMessage,{id:"console.settingsPage.refreshingDataLabel",defaultMessage:"Refresh frequency"}),helpText:Object(r.jsx)(i.FormattedMessage,{id:"console.settingsPage.refreshingDataDescription",defaultMessage:"Console refreshes autocomplete suggestions by querying Elasticsearch. Use less frequent refreshes to reduce bandwidth costs."})},Object(r.jsx)(c.EuiSuperSelect,{options:g,valueOfSelected:E.toString(),onChange:I})),Object(r.jsx)(c.EuiButton,{"data-test-subj":"autocompletePolling",id:"autocompletePolling",onClick:()=>{e.refreshAutocompleteSettings({fields:b,indices:m,templates:O,dataStreams:M})}},Object(r.jsx)(i.FormattedMessage,{defaultMessage:"Refresh autocomplete suggestions",id:"console.settingsPage.refreshButtonLabel"}))):void 0;return Object(r.jsx)(c.EuiModal,{"data-test-subj":"devToolsSettingsModal",className:"conApp__settingsModal",onClose:e.onClose},Object(r.jsx)(c.EuiModalHeader,null,Object(r.jsx)(c.EuiModalHeaderTitle,null,Object(r.jsx)(i.FormattedMessage,{id:"console.settingsPage.pageTitle",defaultMessage:"Console settings"}))),Object(r.jsx)(c.EuiModalBody,null,Object(r.jsx)(c.EuiFormRow,{label:Object(r.jsx)(i.FormattedMessage,{id:"console.settingsPage.fontSizeLabel",defaultMessage:"Font size"})},Object(r.jsx)(c.EuiFieldNumber,{autoFocus:!0,"data-test-subj":"setting-font-size-input",value:t,min:6,max:50,onChange:e=>{const t=parseInt(e.target.value,10);t&&s(t)}})),Object(r.jsx)(c.EuiFormRow,null,Object(r.jsx)(c.EuiSwitch,{checked:a,"data-test-subj":"settingsWrapLines",id:"wrapLines",label:Object(r.jsx)(i.FormattedMessage,{defaultMessage:"Wrap long lines",id:"console.settingsPage.wrapLongLinesLabelText"}),onChange:e=>d(e.target.checked)})),Object(r.jsx)(c.EuiFormRow,{label:Object(r.jsx)(i.FormattedMessage,{id:"console.settingsPage.jsonSyntaxLabel",defaultMessage:"JSON syntax"})},Object(r.jsx)(c.EuiSwitch,{checked:F,"data-test-subj":"tripleQuotes",id:"tripleQuotes",label:Object(r.jsx)(i.FormattedMessage,{defaultMessage:"Use triple quotes in output",id:"console.settingsPage.tripleQuotesMessage"}),onChange:e=>y(e.target.checked)})),Object(r.jsx)(c.EuiFormRow,{label:Object(r.jsx)(i.FormattedMessage,{id:"console.settingsPage.historyLabel",defaultMessage:"History"})},Object(r.jsx)(c.EuiSwitch,{checked:P,label:Object(r.jsx)(i.FormattedMessage,{defaultMessage:"Save requests to history",id:"console.settingsPage.saveRequestsToHistoryLabel"}),onChange:e=>B(e.target.checked)})),Object(r.jsx)(c.EuiFormRow,{label:Object(r.jsx)(i.FormattedMessage,{id:"console.settingsPage.keyboardShortcutsLabel",defaultMessage:"Keyboard shortcuts"})},Object(r.jsx)(c.EuiSwitch,{checked:C,label:Object(r.jsx)(i.FormattedMessage,{defaultMessage:"Enable keyboard shortcuts",id:"console.settingsPage.enableKeyboardShortcutsLabel"}),onChange:e=>R(e.target.checked)})),Object(r.jsx)(c.EuiFormRow,{labelType:"legend",label:Object(r.jsx)(i.FormattedMessage,{id:"console.settingsPage.autocompleteLabel",defaultMessage:"Autocomplete"})},Object(r.jsx)(c.EuiCheckboxGroup,{options:k.map((e=>{const{stateSetter:t,...s}=e;return s})),idToSelectedMap:T,onChange:e=>{(e=>{const t=o.a.find(k,(t=>t.id===e));t&&t.stateSetter(!T[e])})(e)}})),H),Object(r.jsx)(c.EuiModalFooter,null,Object(r.jsx)(c.EuiButtonEmpty,{"data-test-subj":"settingsCancelButton",onClick:e.onClose},Object(r.jsx)(i.FormattedMessage,{id:"console.settingsPage.cancelButtonLabel",defaultMessage:"Cancel"})),Object(r.jsx)(c.EuiButton,{fill:!0,"data-test-subj":"settings-save-button",onClick:function(){e.onSaveSettings({fontSize:t,wrapMode:a,autocomplete:{fields:b,indices:m,templates:O,dataStreams:M},polling:x,pollInterval:E,tripleQuotes:F,isHistoryEnabled:P,isKeyboardShortcutsEnabled:C})}},Object(r.jsx)(i.FormattedMessage,{id:"console.settingsPage.saveButtonLabel",defaultMessage:"Save"}))))}}}]);