"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.handleCombinedFilter = void 0;
var _filters = require("../filters");
var _from_filters = require("./from_filters");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

/** @internal */
const handleCombinedFilter = (filter, inputDataViews, options = {}) => {
  if (!(0, _filters.isCombinedFilter)(filter)) return filter;
  const {
    params
  } = filter.meta;
  const should = params.map(subFilter => {
    const subFilters = Array.isArray(subFilter) ? subFilter : [subFilter];
    return {
      bool: (0, _from_filters.buildQueryFromFilters)(flattenFilters(subFilters), inputDataViews, options)
    };
  });
  return {
    ...filter,
    query: {
      bool: {
        should,
        minimum_should_match: 1
      }
    }
  };
};
exports.handleCombinedFilter = handleCombinedFilter;
function flattenFilters(filters) {
  return filters.reduce((result, filter) => {
    if (Array.isArray(filter)) return [...result, ...flattenFilters(filter)];
    return [...result, filter];
  }, []);
}