/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

import * as t from 'io-ts';
import { DefaultUuid } from '@kbn/securitysolution-io-ts-types';
import { DefaultCreateCommentsArray, description, exceptionListItemType, meta, namespaceType, nonEmptyEntriesArray, osTypeArrayOrUndefined, tags, name } from '../../common';
export var createRuleExceptionListItemSchema = t.intersection([t.exact(t.type({
  description: description,
  entries: nonEmptyEntriesArray,
  name: name,
  type: exceptionListItemType
})), t.exact(t.partial({
  comments: DefaultCreateCommentsArray,
  // defaults to empty array if not set during decode
  item_id: DefaultUuid,
  // defaults to GUID (uuid v4) if not set during decode
  list_id: t.undefined,
  meta: meta,
  // defaults to undefined if not set during decode
  namespace_type: namespaceType,
  // defaults to 'single' if not set during decode
  os_types: osTypeArrayOrUndefined,
  // defaults to empty array if not set during decode
  tags: tags // defaults to empty array if not set during decode
}))]);