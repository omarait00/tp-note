"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CoreUiSettingsRouteHandlerContext = void 0;
var _classPrivateFieldSet2 = _interopRequireDefault(require("@babel/runtime/helpers/classPrivateFieldSet"));
var _classPrivateFieldGet2 = _interopRequireDefault(require("@babel/runtime/helpers/classPrivateFieldGet"));
function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }
function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }
var _client = /*#__PURE__*/new WeakMap();
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

/**
 * The {@link UiSettingsRequestHandlerContext} implementation.
 * @internal
 */
class CoreUiSettingsRouteHandlerContext {
  constructor(uiSettingsStart, savedObjectsRouterHandlerContext) {
    _classPrivateFieldInitSpec(this, _client, {
      writable: true,
      value: void 0
    });
    this.uiSettingsStart = uiSettingsStart;
    this.savedObjectsRouterHandlerContext = savedObjectsRouterHandlerContext;
  }
  get client() {
    if ((0, _classPrivateFieldGet2.default)(this, _client) == null) {
      (0, _classPrivateFieldSet2.default)(this, _client, this.uiSettingsStart.asScopedToClient(this.savedObjectsRouterHandlerContext.client));
    }
    return (0, _classPrivateFieldGet2.default)(this, _client);
  }
}
exports.CoreUiSettingsRouteHandlerContext = CoreUiSettingsRouteHandlerContext;